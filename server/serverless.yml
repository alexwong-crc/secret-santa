# Name of lambda service
service: secret-santa

# Specifying specific version
# frameworkVersion: "=X.X.X"

# Runtime information
provider:
  name: aws
  runtime: python3.8
  region: eu-west-2
  stage: ${opt.stage, "dev"}
  stackName: "${self:custom.domains.${self:provider.stage}}"
  environment:
    dynamoTableDataLayer: "${self:custom.domains.${self:provider.stage}}-data-layer"
    sendGridAPIKey: ${ssm:SENDGRID_API_KEY~true}
  # IAM Policies
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - Fn::GetAtt: [secretSantaRecords, Arn]

# Additional plugins
plugins:
  - serverless-domain-manager
  - serverless-python-requirements

# Custom settings
custom:
  domains:
    prod: santaapi
    staging: staging-santaapi
    dev: dev-santaapi
  customDomain:
    domainName: "${self:custom.domains.${self:provider.stage}}.alexhomingwong.co.uk"
    createRoute53Record: true
  # Not sure if below is needed for packaging python modules
  # pythonRequirements:
  #   dockerizePip: non-linux

# What files to include or exclude
package:
  exclude:
    - src/tests/*
    - keys.env

# Define lambda functions below
functions:
  schedule:
    package: {}
    handler: src/api/schedule.handler
    events:
      - http:
          method: POST
          path: schedule

# AWS Resources
resources:
  Resources:
    secretSantaRecords:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:provider.environment.dynamoTableDataLayer}"
        KeySchema:
          - AttributeName: UUID
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: UUID
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
